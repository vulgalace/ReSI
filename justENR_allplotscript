library(ggplot2)
library(dplyr)
library(readxl)

# Load enrollment data (update path if needed)
data <- read_excel("C:\\Users\\vulga\\bookie.xlsx")

# Clean column names
data <- data %>%
  rename_with(~gsub(" ", "_", .x))

# Convert relevant columns to numeric
data <- data %>%
  mutate(
    Grad_Rank = as.numeric(Grad_Rank),
    Bachelors = as.numeric(Bachelors),
    Masters = as.numeric(Masters),
    Doctorate = as.numeric(Doctorate)
  ) %>%
  mutate(Total = Bachelors + Masters + Doctorate)

# Degree types and their column names
degree_types <- list(
  Bachelors = "Bachelors",
  Masters = "Masters",
  Doctorate = "Doctorate",
  Total = "Total"
)

# Subgroup filters
subgroup_filters <- list(
  "All Schools" = function(df) df,
  "Top 18" = function(df) df %>% filter(Grad_Rank <= 18),
  "Top 10" = function(df) df %>% filter(Grad_Rank <= 10),
  "Top 5" = function(df) df %>% filter(Grad_Rank <= 5),
  "Top 18 Public" = function(df) df %>% filter(Grad_Rank <= 18, Type == "Public"),
  "Top 18 Private" = function(df) df %>% filter(Grad_Rank <= 18, Type == "Private")
)

# Master function to run analysis and generate plot
run_analysis <- function(df, x_col, title_suffix) {
  df <- df %>%
    filter(is.finite(Grad_Rank), is.finite(.data[[x_col]]))
  
  if (nrow(df) < 3) {
    cat(sprintf("Skipping %s: Not enough data points.\n\n", title_suffix))
    return(NULL)
  }
  
  # Build formula dynamically
  formula <- as.formula(paste("Grad_Rank ~", x_col))
  model <- lm(formula, data = df)
  summary_model <- summary(model)
  
  intercept <- coef(model)[1]
  slope <- coef(model)[2]
  r2 <- summary_model$r.squared
  cat(sprintf("Model for %s:\n y = %.3f + %.3f*x\n R^2 = %.4f\n\n",
              title_suffix, intercept, slope, r2))
  
  # Color Purdue specially
  df$Color <- ifelse(df$School_Name == "Purdue University", "#cfb991", "#000000")
  
  x_vals <- df[[x_col]]
  y_vals <- df$Grad_Rank
  
  plot <- ggplot(df, aes_string(x = x_col, y = "Grad_Rank", color = "Color")) +
    geom_point() +
    geom_smooth(method = "lm", se = FALSE, color = "red") +
    scale_color_identity() +
    scale_x_continuous(limits = c(min(x_vals), max(x_vals))) +
    scale_y_reverse(limits = c(max(y_vals), min(y_vals))) +
    labs(
      title = paste("Grad Rank vs", x_col, "Enrollment â€”", title_suffix),
      x = paste(x_col, "Enrollment"),
      y = "USNWR Grad Rank"
    ) +
    theme_minimal()
  
  print(plot)
}

# Loop through every degree type and subgroup
for (degree_label in names(degree_types)) {
  degree_col <- degree_types[[degree_label]]
  
  cat("\n=============================\n")
  cat(paste("DEGREE LEVEL:", degree_label, "\n"))
  cat("=============================\n")
  
  for (group_label in names(subgroup_filters)) {
    filtered_df <- subgroup_filters[[group_label]](data)
    run_analysis(filtered_df, degree_col, paste(group_label, "-", degree_label))
  }
}
