# ------------------------------------------------------------------------------
# SCRIPT: PRIVATE ONLY - STATISTICS + COMPASS PLOTS (ANNOTATED)
# Based on "All Schools" final code, but filtering TYPE == "Private"
# ------------------------------------------------------------------------------

# install.packages(c("readxl","dplyr","tidyr","ggplot2","Hmisc")) # if not installed
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(Hmisc)

# 1. Read Excel & Rename
df <- read_excel("C:\\Users\\vulga\\jupyCOPY.xlsx") %>%
  rename(
    year = YEAR,
    ipeds_unit_id = IPEDS,
    grad_rank = RANK,
    discipline_name = DISCIPLINE,
    school_name = UNIVERSITY,
    type = TYPE,  # ensure "TYPE" in your Excel

    assistant_prof_sum = `ASSISTANT PROF SUM`,
    associate_prof_sum = `ASSOCIATE PROF SUM`,
    full_prof_sum      = `FULL PROF SUM`,
    full_time_research_fac_sum = `FT RESEARCH FAC. SUM`,
    part_time_research_fac_sum = `PT RESEARCH FAC. SUM`,
    
    full_time_teaching_non_tenure_sum = `FT TEACHING FAC. (NONT) SUM`,
    part_time_teaching_non_tenure_sum = `PT TEACHING FAC (NONT) SUM`
  )

# 2. Sort & Group
df <- df %>%
  arrange(ipeds_unit_id, year) %>%
  group_by(ipeds_unit_id)

# 3. Create Next-Year Columns
df <- df %>%
  mutate(
    assistant_next   = lead(assistant_prof_sum),
    associate_next   = lead(associate_prof_sum),
    full_next        = lead(full_prof_sum),
    ft_res_next      = lead(full_time_research_fac_sum),
    pt_res_next      = lead(part_time_research_fac_sum),
    ft_teach_nt_next = lead(full_time_teaching_non_tenure_sum),
    pt_teach_nt_next = lead(part_time_teaching_non_tenure_sum),
    
    rank_next = lead(grad_rank),
    year_next = lead(year)
  )

# 4. Compute Deltas
df <- df %>%
  mutate(
    rank_change = grad_rank - rank_next,
    
    assistant_change   = assistant_next   - assistant_prof_sum,
    associate_change   = associate_next   - associate_prof_sum,
    full_change        = full_next        - full_prof_sum,
    ft_res_change      = ft_res_next      - full_time_research_fac_sum,
    pt_res_change      = pt_res_next      - part_time_research_fac_sum,
    ft_teach_nt_change = ft_teach_nt_next - full_time_teaching_non_tenure_sum,
    pt_teach_nt_change = pt_teach_nt_next - part_time_teaching_non_tenure_sum
  ) %>%
  filter(!is.na(year_next)) %>%
  ungroup()

# ------------------------------------------------------------------
# 5. Filter to Private
# ------------------------------------------------------------------
df <- df %>%
  filter(type == "Private")

# 6. year_transition
df <- df %>%
  mutate(year_transition = paste0(year, "-", year_next))

# 7. Filter to Target Transitions
target_transitions <- c(
  "2015-2016", "2016-2017", "2017-2018", "2018-2019",
  "2019-2020", "2020-2021", "2021-2022", "2022-2023"
)

df_filtered <- df %>%
  filter(year_transition %in% target_transitions)

# 8. Stats (Console)
cat("\n--- DESCRIPTIVE STATS (Private Only) ---\n")
summary(df_filtered[, c("rank_change",
                        "assistant_change","associate_change","full_change",
                        "ft_res_change","pt_res_change",
                        "ft_teach_nt_change","pt_teach_nt_change")])

cat("\n--- CORRELATION MATRIX (rcorr, Pearson) ---\n")
df_cor <- df_filtered %>%
  select(rank_change, assistant_change, associate_change, full_change,
         ft_res_change, pt_res_change, ft_teach_nt_change, pt_teach_nt_change)
rc <- rcorr(as.matrix(df_cor), type="pearson")
cat("Correlation Coefficients:\n")
print(rc$r)
cat("\nP-values:\n")
print(rc$P)

cat("\n--- MULTIPLE REGRESSION: rank_change ~ faculty changes (Private) ---\n")
model_private <- lm(rank_change ~ assistant_change + associate_change + full_change +
                      ft_res_change + pt_res_change + ft_teach_nt_change + pt_teach_nt_change,
                    data=df_filtered)
print(summary(model_private))

# 9. Loop Over Transitions -> Annotated Plots (No Saving)
for (yt in target_transitions) {
  cat("\nProcessing transition:", yt, "\n")
  
  df_sub_wide <- df_filtered %>%
    filter(year_transition == yt)
  
  if(nrow(df_sub_wide) == 0) {
    cat("   No rows for this transition.\n")
    next
  }
  
  df_sub_wide <- df_sub_wide %>%
    mutate(total_fac_change = assistant_change + associate_change + full_change +
                             ft_res_change + pt_res_change +
                             ft_teach_nt_change + pt_teach_nt_change)
  
  corr_test <- cor.test(df_sub_wide$rank_change, df_sub_wide$total_fac_change, method="pearson")
  r_val <- corr_test$estimate
  r_sq  = r_val^2
  p_val <- corr_test$p.value
  
  corr_label <- paste0("R^2 = ", round(r_sq, 3),
                       ", p = ", formatC(p_val, format="e", digits=2))
  
  df_sub_long <- df_sub_wide %>%
    select(
      ipeds_unit_id, school_name, discipline_name, year_transition, rank_change,
      assistant_change, associate_change, full_change,
      ft_res_change, pt_res_change,
      ft_teach_nt_change, pt_teach_nt_change
    ) %>%
    pivot_longer(
      cols = c(
        assistant_change, associate_change, full_change,
        ft_res_change, pt_res_change,
        ft_teach_nt_change, pt_teach_nt_change
      ),
      names_to = "faculty_category",
      values_to = "faculty_change"
    )
  
  color_map <- c(
    "assistant_change"   = "green",
    "associate_change"   = "red",
    "full_change"        = "blue",
    "ft_res_change"      = "orange",
    "pt_res_change"      = "purple",
    "ft_teach_nt_change" = "brown",
    "pt_teach_nt_change" = "pink"
  )
  
  p <- ggplot(df_sub_long, aes(x = rank_change, y = faculty_change, color = faculty_category)) +
    geom_point(size=3) +
    geom_vline(xintercept=0, color="black") +
    geom_hline(yintercept=0, color="black") +
    scale_color_manual(values=color_map) +
    labs(
      title = paste("Compass Plot (Private):", yt),
      x = "Rank Change (+ = Improved)",
      y = "Faculty Change (+ = Gained Faculty)",
      color = "Faculty Category"
    ) +
    theme_minimal()
  
  xPos <- min(df_sub_long$rank_change, na.rm=TRUE)
  yPos <- max(df_sub_long$faculty_change, na.rm=TRUE)
  
  p_annotated <- p +
    annotate("text", x = xPos, y = yPos,
             label = paste("Corr rank vs total_fac:", corr_label),
             hjust = 0, vjust = 1, size=4, fontface="bold")
  
  print(p_annotated)
}

cat("\nDone! All stats printed, plots shown in Viewer for Private institutions.\n")
